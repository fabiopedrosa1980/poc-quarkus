quarkus.http.port=8081
#quarkus.resteasy.path=/quarkus

#banner
quarkus.banner.path=banner.txt

# docker run --name quarkus -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=teste  -d postgres
#bd h2
#quarkus.datasource.url=jdbc:h2:mem:test
#quarkus.datasource.driver=org.h2.Driver
#quarkus.datasource.username=h2
#quarkus.datasource.password=

#bd postgres#
quarkus.datasource.url=jdbc:postgresql://localhost:5432/quarkus
quarkus.datasource.driver=org.postgresql.Driver
quarkus.datasource.username=postgres
quarkus.datasource.password=teste

quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.sql-load-script = import-dev.sql

#definicao de profile de dev
#%dev.quarkus.hibernate-orm.database.generation=drop-and-create
#%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql

#definicao de profile de prod
#%prod.quarkus.hibernate-orm.database.generation=none
#%prod.quarkus.hibernate-orm.sql-load-script = no-file

#open api
quarkus.swagger-ui.always-include=true
#quarkus.swagger-ui.path=/swagger-ui

#gzip
#quarkus.resteasy.gzip.enabled=true
#quarkus.resteasy.gzip.max-input=10M

#security
quarkus.oidc.enabled=true
quarkus.oidc.auth-server-url=http://localhost:8080/auth/realms/quarkus
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret
#quarkus.oidc.application-type=web-app
#quarkus.http.auth.permission.authenticated.paths=/*
#quarkus.http.auth.permission.authenticated.policy=authenticated
#quarkus.keycloak.policy-enforcer.enable=true

quarkus.http.cors=true

#opentracing
quarkus.jaeger.service-name=poc-quarkus
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

